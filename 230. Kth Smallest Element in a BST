/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode *root, vector<int>&vec){
        if(root==NULL)
        return ;
        if(root->left) inorder(root->left,vec);
        vec.push_back(root->val);
        if(root->right) inorder(root->right,vec);
    }
    int kthSmallest(TreeNode* root, int k) {
        if(root==NULL) return NULL;
        vector<int>vec;
        inorder(root,vec);
        for(int i=0;i<vec.size();i++)
        cout<<vec[i]<<" ";
        return vec[k-1];
    }
};
