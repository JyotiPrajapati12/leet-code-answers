class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int low=1,high=*max_element(piles.begin(),piles.end()),mid;
        int ans=INT_MAX;
        while(low<=high){
            mid=(low+high)/2;
            long long sum=0;
            for(int i=0;i<piles.size();i++){
                sum+=ceil((double)piles[i]/mid);
            }
            //cout<<"Mid: "<<mid<<" Sum: "<<sum<<endl;
            if(sum<=h){
                ans=min(ans,mid);
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return ans;
    }
};
