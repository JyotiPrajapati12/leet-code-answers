class Solution {
public:
    bool valid(vector<vector<char>>& board,int row,int col,char c){
        for(int i=0;i<9;i++){
            if(board[i][col]==c && row!=i) return false;
            if(board[row][i]==c && col!=i) return false;

            int smallBoxRow=3*(row/3) + i/3;
            int smallBoxCol=3*(col/3)+ i%3;
            if(board[smallBoxRow][smallBoxCol]==c && smallBoxRow!=row && smallBoxCol!=col)     
            return false;
        }
        return true;
    }
    bool solve(vector<vector<char>>& board){
        for(int i=0;i<board.size();i++){
            for( int j=0;j<board[0].size();j++){
                if(board[i][j]=='.'){
                    for(char k='1';k<='9';k++){
                        if(valid(board,i,j,k)){
                            board[i][j]=k;
                            if(solve(board))
                            return true;
                            else
                            board[i][j]='.';
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
};
