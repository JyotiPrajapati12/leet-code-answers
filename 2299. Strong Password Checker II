class Solution {
public:
    bool strongPasswordCheckerII(string password) {
        int n=password.size();
        if(n<8)
        return false;
        string number="0123456789";
        bool digit=false;
        for(int i=0;i<n;i++){
            if(number.find(password[i])!=string::npos){
                digit=true;
                break;
            }
            
        }
     //   cout<<digit<<endl;
        string upperCase="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        bool uc=false;
        for(int i=0;i<n;i++){
            if(upperCase.find(password[i])!=string::npos){
            uc=true;
            break;
            }

        }
      //  cout<<uc<<endl;
        string lowerCase="abcdefghijklmnopqrstuvwxyz";
        bool lc=false;
        for(int i=0;i<n;i++){
            if(lowerCase.find(password[i])!=string::npos)
            {
                lc=true;
                break;
            }
        }
      //  cout<<lc<<endl;
        string specialsymbol="!@#$%^&*()-+";
        bool ss=false;
        for(int i=0;i<n;i++){
            if(specialsymbol.find(password[i])!=string::npos){
                ss=true;
                break;
            }
        }
      //  cout<<ss<<endl;
        bool noduplicate=true;
        for(int i=1;i<n;i++){
            if(password[i]==password[i-1])
            {
                noduplicate=false;
                break;
            }
        }
    //    cout<<noduplicate<<endl;
        return digit && uc && lc && ss && noduplicate;

    }
};
