class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        
        int n=nums.size();
        //O(nlogn)
        //         sort(nums.begin(),nums.end());
        // int count=1,mx=1;
        // if(n==0)
        // return 0;
        // if(n==1)
        // return 1;
        // for(int i=0;i<n-1;i++){
        //     if(nums[i]==nums[i+1] || nums[i+1]-nums[i]==1){
        //         if(nums[i+1]-nums[i]==1)
        //         count++;
        //         mx=max(mx,count);
        //     }
        //     else
        //     count=1;
    
        // }
        // return mx;

        //O(n)
        set<int>s(nums.begin(),nums.end());
        int mx=0;
        for(auto it:s){
            if(s.find(it-1)==s.end()){
                int count=1;
                while(s.find(it+1)!=s.end()){
                    count++;
                    it=it+1;
                }
                mx=max(mx,count);
            }
        }
        return mx;
    }
};
