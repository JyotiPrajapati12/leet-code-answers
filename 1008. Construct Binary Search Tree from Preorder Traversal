/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
TreeNode *built(vector<int>&preorder,int& i,int lmt){
    if(i==preorder.size() || preorder[i]>lmt) return NULL;
    TreeNode *temp=new TreeNode(preorder[i++]);
    temp->left=built(preorder,i,temp->val);
    temp->right=built(preorder,i,lmt);
    return temp;

}
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int i=0;
        return built(preorder,i,INT_MAX);
    }
};
