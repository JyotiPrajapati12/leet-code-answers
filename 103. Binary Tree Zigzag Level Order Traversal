/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(root==NULL)
        return {};
        vector<vector<int>>ans;
        queue<TreeNode *>q;
        q.push(root);
        int c=1;
        while(!q.empty()){ 
            int n=q.size();
            vector<int>vec(n);
            for(int i=0;i<n;i++){
                 TreeNode *temp=q.front();
                 q.pop();
                 int index=c?i:n-i-1;
                vec[index]=temp->val;

                 if(temp->left) q.push(temp->left);
                 if(temp->right) q.push(temp->right);

                

            }
             c=!c;
            ans.push_back(vec);

        }
        return ans;
    }
};
