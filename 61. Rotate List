/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head || !head->next || k==0)
        return head;
        ListNode *ptr=head;
        int c=1;
        while(ptr->next){
            c++;
            ptr=ptr->next;
            
        }
        ptr->next=head;
            
    
         k=k%c;
        ListNode *temp=head,*newhead;
        for(int i=0;i<c-k;i++){
            temp=temp->next;
            newhead=temp;
        }

        while(temp->next!=newhead){
            temp=temp->next;
        }
        temp->next=NULL;
        return newhead;
    }
};
