class Solution {
public:
    // int solve(vector<int>&coins,int amount, int ind,vector<vector<int>>&dp){
    //     if(ind==0){
    //         if(amount%coins[ind]==0) return amount/coins[ind];
        
    //         return 1e9;
    //     }
    //     if(dp[ind][amount]!=-1) return dp[ind][amount];
    //     int notpick=solve(coins,amount,ind-1,dp);
    //     int pick=1e9;
    //     if(coins[ind]<=amount)
    //     pick=1+ solve(coins,amount-coins[ind],ind,dp);
    //     return dp[ind][amount]=min(pick,notpick);
    // }
    int coinChange(vector<int>& coins, int amount) {
        vector<vector<int>>dp(coins.size(),vector<int>(amount+1,0));
        // int ans=solve(coins,amount,coins.size()-1,dp);
        // if(ans>=1e9)
        // return -1;
        // else
        // return ans;

        for(int i=0;i<=amount;i++){
            if(i%coins[0]==0) dp[0][i]=i/coins[0];
            else dp[0][i]=1e9;
        }
        for(int i=1;i<coins.size();i++){
            for(int target=0;target<=amount;target++){
                int notpick=dp[i-1][target];
                int pick=1e9;
                if(coins[i]<=target){
                    pick=1+dp[i][target-coins[i]];
                }
                dp[i][target]=min(pick,notpick);
            }
            
        }
        int ans=dp[coins.size()-1][amount];
         if(ans>=1e9)
        return -1;
        else
        return ans;
        
    }
};
