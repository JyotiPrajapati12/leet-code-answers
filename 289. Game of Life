class Solution {
public:
    void gameOfLife(vector<vector<int>>& board) {
        int n=board.size();
        int m=board[0].size();

        vector<vector<int>>grid(n,vector<int>(m,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(i-1>=0 && j-1>=0){
                    if(board[i-1][j-1]==1)
                    grid[i][j]=grid[i][j]+1;
                }
            
                  if(i-1>=0 ){
                    if(board[i-1][j]==1)
                    grid[i][j]=grid[i][j]+1;  
                }
            
                if(i-1>=0 && j+1<m){
                    if(board[i-1][j+1]==1)
                    grid[i][j]=grid[i][j]+1;
                }
                if(j+1<m){
                    if(board[i][j+1]==1)
                    grid[i][j]=grid[i][j]+1;
                }

                if(i+1<n && j+1<m){
                    if(board[i+1][j+1]==1)
                    grid[i][j]=grid[i][j]+1;
                }

                if(i+1<n){
                    if(board[i+1][j]==1)
                    grid[i][j]=grid[i][j]+1;
                }

                if(i+1<n && j-1>=0){
                    if(board[i+1][j-1]==1)
                    grid[i][j]=grid[i][j]+1;
                }

                if(j-1>=0){
                    if(board[i][j-1]==1)
                    grid[i][j]=grid[i][j]+1;
                }
            }
        }

        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==1){
                    if(grid[i][j]<2){
                        board[i][j]=0;
                    }
                    if( grid[i][j]>3) board[i][j]=0;
                }else{
                    if(grid[i][j]==3) board[i][j]=1;
                }
            }
        }

    }
};
