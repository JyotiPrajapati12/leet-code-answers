class Solution {
public:
    bool solve(vector<vector<char>>& board){
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j]!='.'){
                    if(!valid(board,i,j,board[i][j])){
                        return false;
                    }
                }
            }
        }
        return true;
    }

    bool valid(vector<vector<char>>& board,int row,int col,char c){
        for(int i=0;i<9;i++){
            if(board[i][col]==c && i!=row) return false;
            if(board[row][i]==c && i!=col) return false;
            int smallBoxRow=3*(row/3)+i/3;
            int smallBoxCol=3*(col/3)+i%3;
            if(board[smallBoxRow][smallBoxCol]==c && smallBoxRow!=row && smallBoxCol!=col ) 
                   return false;
        }
        return true;
    }
    bool isValidSudoku(vector<vector<char>>& board) {
     return solve(board);   
    }
};
